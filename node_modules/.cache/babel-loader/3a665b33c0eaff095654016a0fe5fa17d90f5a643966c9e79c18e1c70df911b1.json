{"ast":null,"code":"import React,{useState,useEffect}from'react';import{EMPTY,PLAYER_1,PLAYER_2,GRID_SIZES,DEFAULT_GRID_SIZE,GRID_DIMENSIONS,createEmptyBoard,findLowestEmptyRow,makeMove,isValidMove,getGameStatus,getCols}from'./gameLogic';import{getAIMove,AI_LEVEL,AI_PERSONA}from'./aiPlayer';// Main Connect4 component\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Connect4Game=()=>{// Game state\nconst[gridSize,setGridSize]=useState(DEFAULT_GRID_SIZE);const[board,setBoard]=useState(createEmptyBoard(gridSize));const[currentPlayer,setCurrentPlayer]=useState(PLAYER_1);const[gameStatus,setGameStatus]=useState('inProgress');// 'inProgress', 'win', 'draw'\nconst[winner,setWinner]=useState(null);const[winningCells,setWinningCells]=useState([]);const[hoverColumn,setHoverColumn]=useState(null);const[gameMode,setGameMode]=useState('player-vs-player');// 'player-vs-player', 'player-vs-ai'\nconst[aiDifficulty,setAiDifficulty]=useState(AI_LEVEL.ROSIE);// Default to Rosie (medium)\nconst[aiThinking,setAiThinking]=useState(false);const[playerColor,setPlayerColor]=useState(PLAYER_1);// Human player color\nconst[dropAnimation,setDropAnimation]=useState({active:false,col:null,row:null});const[showPersonaInfo,setShowPersonaInfo]=useState(false);// Use effect for AI turn\nuseEffect(()=>{// If it's AI's turn in player-vs-ai mode and game is in progress\nconst isAiTurn=gameMode==='player-vs-ai'&&currentPlayer!==playerColor&&gameStatus==='inProgress';if(isAiTurn&&!dropAnimation.active){// Add a small delay to make it seem like AI is thinking\nsetAiThinking(true);const aiTimer=setTimeout(()=>{makeAIMove();setAiThinking(false);},800);return()=>clearTimeout(aiTimer);}},[currentPlayer,gameStatus,gameMode,playerColor,board,dropAnimation]);// AI makes a move\nconst makeAIMove=()=>{if(gameStatus!=='inProgress')return;const aiPlayer=playerColor===PLAYER_1?PLAYER_2:PLAYER_1;const colIndex=getAIMove(board,aiPlayer,aiDifficulty);if(colIndex!==-1){handleMove(colIndex);}};// Common function to handle moves (both player and AI)\nconst handleMove=colIndex=>{if(gameStatus!=='inProgress'||!isValidMove(board,colIndex)||dropAnimation.active)return;const rowIndex=findLowestEmptyRow(board,colIndex);if(rowIndex===-1)return;// Invalid move\n// Start drop animation\nsetDropAnimation({active:true,col:colIndex,row:rowIndex,player:currentPlayer});// After animation completes, update the board\nsetTimeout(()=>{const{board:newBoard}=makeMove(board,colIndex,currentPlayer);setBoard(newBoard);// Check game status after move\nconst status=getGameStatus(newBoard,rowIndex,colIndex);if(status.status==='win'){setGameStatus('win');setWinner(status.winner);setWinningCells(status.winningCells);}else if(status.status==='draw'){setGameStatus('draw');}else{// Switch player\nsetCurrentPlayer(currentPlayer===PLAYER_1?PLAYER_2:PLAYER_1);}// End animation\nsetDropAnimation({active:false,col:null,row:null});},400);// Animation duration\n};// Handle column click\nconst handleColumnClick=colIndex=>{// If it's AI's turn in player-vs-ai mode, do nothing\nif(gameMode==='player-vs-ai'&&currentPlayer!==playerColor){return;}handleMove(colIndex);};// Reset the game\nconst resetGame=()=>{setBoard(createEmptyBoard(gridSize));setCurrentPlayer(PLAYER_1);setGameStatus('inProgress');setWinner(null);setWinningCells([]);setHoverColumn(null);setAiThinking(false);setDropAnimation({active:false,col:null,row:null});};// Change grid size\nconst changeGridSize=size=>{setGridSize(size);setBoard(createEmptyBoard(size));setCurrentPlayer(PLAYER_1);setGameStatus('inProgress');setWinner(null);setWinningCells([]);setHoverColumn(null);setAiThinking(false);setDropAnimation({active:false,col:null,row:null});};// Change game mode\nconst changeGameMode=mode=>{setGameMode(mode);resetGame();};// Change AI difficulty\nconst changeAiDifficulty=difficulty=>{setAiDifficulty(difficulty);resetGame();};// Change player color\nconst changePlayerColor=color=>{setPlayerColor(color);resetGame();};// Render a cell\nconst renderCell=(value,rowIndex,colIndex)=>{let cellClass='cell';// Handle animation\nif(dropAnimation.active&&dropAnimation.col===colIndex&&rowIndex<=dropAnimation.row){if(rowIndex===dropAnimation.row){cellClass+=dropAnimation.player===PLAYER_1?' player1 dropping':' player2 dropping';}}else if(value===PLAYER_1){cellClass+=' player1';}else if(value===PLAYER_2){cellClass+=' player2';}// Check if this cell is part of the winning combination\nconst isWinningCell=winningCells.some(cell=>cell.row===rowIndex&&cell.col===colIndex);if(isWinningCell){cellClass+=' winning';}return/*#__PURE__*/_jsx(\"div\",{className:cellClass},`${rowIndex}-${colIndex}`);};// Render a column\nconst renderColumn=colIndex=>{const isColumnFull=findLowestEmptyRow(board,colIndex)===-1;const isHovered=hoverColumn===colIndex&&!isColumnFull&&gameStatus==='inProgress';const isPlayerTurn=gameMode!=='player-vs-ai'||currentPlayer===playerColor;const isInteractive=gameStatus==='inProgress'&&!dropAnimation.active&&isPlayerTurn;return/*#__PURE__*/_jsx(\"div\",{className:`column ${isHovered?'hover':''} ${isColumnFull?'full':''} ${!isInteractive?'not-interactive':''} ${gridSize}`,onClick:()=>handleColumnClick(colIndex),onMouseEnter:()=>setHoverColumn(colIndex),onMouseLeave:()=>setHoverColumn(null),children:board.map((row,rowIndex)=>renderCell(row[colIndex],rowIndex,colIndex))},colIndex);};// Game status message\nconst renderGameStatus=()=>{// Get current AI persona if in AI mode\nconst currentPersona=AI_PERSONA[aiDifficulty];if(gameStatus==='win'){const winnerText=gameMode==='player-vs-ai'?winner===playerColor?'You win!':`${currentPersona.name} wins!`:`Player ${winner} wins!`;return/*#__PURE__*/_jsx(\"div\",{className:\"status\",children:winnerText});}else if(gameStatus==='draw'){return/*#__PURE__*/_jsx(\"div\",{className:\"status\",children:\"Game ended in a draw!\"});}else if(aiThinking){return/*#__PURE__*/_jsxs(\"div\",{className:\"status thinking\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"ai-avatar\",children:currentPersona.avatar}),currentPersona.name,\" is thinking...\"]});}else if(dropAnimation.active){return/*#__PURE__*/_jsx(\"div\",{className:\"status\",children:\"Making move...\"});}else{const turnText=gameMode==='player-vs-ai'?currentPlayer===playerColor?'Your turn':`${currentPersona.name}'s turn ${currentPersona.avatar}`:`Player ${currentPlayer}'s turn`;return/*#__PURE__*/_jsx(\"div\",{className:\"status\",children:turnText});}};// Render game settings\nconst renderGameSettings=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"game-settings\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"setting-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Game Mode:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{className:`mode-button ${gameMode==='player-vs-player'?'active':''}`,onClick:()=>changeGameMode('player-vs-player'),children:\"Player vs Player\"}),/*#__PURE__*/_jsx(\"button\",{className:`mode-button ${gameMode==='player-vs-ai'?'active':''}`,onClick:()=>changeGameMode('player-vs-ai'),children:\"Player vs AI\"})]})]}),gameMode==='player-vs-ai'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"setting-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Choose Your Opponent:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"persona-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`persona-card ${aiDifficulty===AI_LEVEL.JIM?'active':''}`,onClick:()=>changeAiDifficulty(AI_LEVEL.JIM),children:[/*#__PURE__*/_jsx(\"div\",{className:\"persona-avatar\",children:AI_PERSONA[AI_LEVEL.JIM].avatar}),/*#__PURE__*/_jsx(\"div\",{className:\"persona-name\",children:AI_PERSONA[AI_LEVEL.JIM].name}),/*#__PURE__*/_jsx(\"div\",{className:\"persona-difficulty\",children:\"Beginner\"}),/*#__PURE__*/_jsx(\"div\",{className:\"persona-info-icon\",onClick:e=>{e.stopPropagation();setShowPersonaInfo(AI_LEVEL.JIM);},children:\"\\u2139\\uFE0F\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:`persona-card ${aiDifficulty===AI_LEVEL.ROSIE?'active':''}`,onClick:()=>changeAiDifficulty(AI_LEVEL.ROSIE),children:[/*#__PURE__*/_jsx(\"div\",{className:\"persona-avatar\",children:AI_PERSONA[AI_LEVEL.ROSIE].avatar}),/*#__PURE__*/_jsx(\"div\",{className:\"persona-name\",children:AI_PERSONA[AI_LEVEL.ROSIE].name}),/*#__PURE__*/_jsx(\"div\",{className:\"persona-difficulty\",children:\"Intermediate\"}),/*#__PURE__*/_jsx(\"div\",{className:\"persona-info-icon\",onClick:e=>{e.stopPropagation();setShowPersonaInfo(AI_LEVEL.ROSIE);},children:\"\\u2139\\uFE0F\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:`persona-card ${aiDifficulty===AI_LEVEL.DANGERMOUSE?'active':''}`,onClick:()=>changeAiDifficulty(AI_LEVEL.DANGERMOUSE),children:[/*#__PURE__*/_jsx(\"div\",{className:\"persona-avatar\",children:AI_PERSONA[AI_LEVEL.DANGERMOUSE].avatar}),/*#__PURE__*/_jsx(\"div\",{className:\"persona-name\",children:AI_PERSONA[AI_LEVEL.DANGERMOUSE].name}),/*#__PURE__*/_jsx(\"div\",{className:\"persona-difficulty\",children:\"Expert\"}),/*#__PURE__*/_jsx(\"div\",{className:\"persona-info-icon\",onClick:e=>{e.stopPropagation();setShowPersonaInfo(AI_LEVEL.DANGERMOUSE);},children:\"\\u2139\\uFE0F\"})]})]}),showPersonaInfo&&/*#__PURE__*/_jsx(\"div\",{className:\"persona-info-modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"persona-info-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"persona-info-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"persona-info-avatar\",children:AI_PERSONA[showPersonaInfo].avatar}),/*#__PURE__*/_jsx(\"h3\",{children:AI_PERSONA[showPersonaInfo].name}),/*#__PURE__*/_jsx(\"button\",{className:\"close-button\",onClick:()=>setShowPersonaInfo(false),children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"p\",{children:AI_PERSONA[showPersonaInfo].description})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"setting-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Your Color:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{className:`color-button player1 ${playerColor===PLAYER_1?'active':''}`,onClick:()=>changePlayerColor(PLAYER_1),children:\"Red\"}),/*#__PURE__*/_jsx(\"button\",{className:`color-button player2 ${playerColor===PLAYER_2?'active':''}`,onClick:()=>changePlayerColor(PLAYER_2),children:\"Yellow\"})]})]})]})]});};// Render grid size selection\nconst renderGridSizeSelection=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:\"setting-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Grid Size:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{className:`size-button ${gridSize===GRID_SIZES.STANDARD?'active':''}`,onClick:()=>changeGridSize(GRID_SIZES.STANDARD),children:\"Standard (7\\xD76)\"}),/*#__PURE__*/_jsx(\"button\",{className:`size-button ${gridSize===GRID_SIZES.MEDIUM?'active':''}`,onClick:()=>changeGridSize(GRID_SIZES.MEDIUM),children:\"Medium (11\\xD711)\"}),/*#__PURE__*/_jsx(\"button\",{className:`size-button ${gridSize===GRID_SIZES.LARGE?'active':''}`,onClick:()=>changeGridSize(GRID_SIZES.LARGE),children:\"Large (21\\xD721)\"})]})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"connect4-game\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Connect 4\"}),renderGameSettings(),renderGridSizeSelection(),renderGameStatus(),/*#__PURE__*/_jsx(\"div\",{className:`board ${gridSize}`,children:Array(board[0].length).fill().map((_,colIndex)=>renderColumn(colIndex))}),/*#__PURE__*/_jsx(\"button\",{className:\"reset-button\",onClick:resetGame,children:\"Reset Game\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"instructions\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"How to Play:\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click on a column to drop your disc. The goal is to connect 4 of your discs in a row - horizontally, vertically, or diagonally.\"})]}),/*#__PURE__*/_jsx(\"style\",{jsx:true,children:`\n        .connect4-game {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n          margin: 0 auto;\n          max-width: 100%;\n          padding: 20px;\n          background: linear-gradient(135deg, #f5f7fa 0%, #e4e9f2 100%);\n          min-height: 100vh;\n          color: #333;\n        }\n        \n        h1 {\n          color: #2c3e50;\n          margin-bottom: 20px;\n          font-size: clamp(1.8rem, 5vw, 2.5rem);\n          text-shadow: 1px 1px 3px rgba(0,0,0,0.1);\n          text-align: center;\n        }\n        \n        .status {\n          font-size: clamp(1.1rem, 3vw, 1.3rem);\n          margin-bottom: 20px;\n          font-weight: 600;\n          text-align: center;\n          min-height: 40px;\n          padding: 10px;\n          border-radius: 8px;\n          background-color: rgba(255, 255, 255, 0.7);\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 8px;\n        }\n        \n        .status.thinking {\n          color: #3498db;\n          animation: pulse-subtle 2s infinite;\n        }\n        \n        .ai-avatar {\n          font-size: 1.4em;\n          margin-right: 5px;\n        }\n        \n        .board {\n          display: flex;\n          background: linear-gradient(145deg, #3498db, #2980b9);\n          padding: clamp(8px, 2vw, 15px);\n          border-radius: 12px;\n          box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15), inset 0 -5px 0 rgba(0, 0, 0, 0.1);\n          margin: 0 auto;\n          width: fit-content;\n          transition: transform 0.3s ease;\n        }\n        \n        .board:hover {\n          transform: translateY(-5px);\n        }\n        \n        .column {\n          display: flex;\n          flex-direction: column;\n          cursor: pointer;\n          position: relative;\n          transition: all 0.2s ease;\n        }\n        \n        .column.hover {\n          background-color: rgba(255, 255, 255, 0.2);\n          transform: translateY(-5px);\n        }\n        \n        .column.full, .column.not-interactive {\n          cursor: not-allowed;\n          opacity: 0.8;\n        }\n        \n        .cell {\n          width: clamp(35px, 10vw, 60px);\n          height: clamp(35px, 10vw, 60px);\n          margin: clamp(4px, 1vw, 6px);\n          border-radius: 50%;\n          background-color: #ecf0f1;\n          box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.1);\n          transition: all 0.3s ease;\n          position: relative;\n        }\n        \n        /* Grid size specific styles */\n        .board.medium .cell {\n          width: clamp(25px, 7vw, 45px);\n          height: clamp(25px, 7vw, 45px);\n          margin: clamp(2px, 0.7vw, 4px);\n        }\n        \n        .board.large .cell {\n          width: clamp(15px, 4vw, 25px);\n          height: clamp(15px, 4vw, 25px);\n          margin: clamp(1px, 0.4vw, 2px);\n        }\n        \n        .cell.player1 {\n          background: linear-gradient(145deg, #ff5e54, #e74c3c);\n          box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.2), 0 4px 8px rgba(231, 76, 60, 0.3);\n        }\n        \n        .cell.player2 {\n          background: linear-gradient(145deg, #ffeb3b, #f9ca24);\n          box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(249, 202, 36, 0.3);\n        }\n        \n        .cell.winning {\n          box-shadow: 0 0 15px 5px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2);\n          animation: pulse 1.5s infinite;\n          z-index: 1;\n        }\n        \n        .cell.dropping {\n          animation: dropAnimation 0.5s cubic-bezier(0.215, 0.610, 0.355, 1.000);\n        }\n        \n        @keyframes pulse {\n          0% { box-shadow: 0 0 15px 5px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2); }\n          50% { box-shadow: 0 0 25px 8px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2); }\n          100% { box-shadow: 0 0 15px 5px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2); }\n        }\n        \n        @keyframes pulse-subtle {\n          0% { opacity: 1; }\n          50% { opacity: 0.8; }\n          100% { opacity: 1; }\n        }\n        \n        @keyframes dropAnimation {\n          0% { opacity: 0; transform: translateY(-500%); }\n          60% { opacity: 1; transform: translateY(15%); }\n          80% { transform: translateY(-10%); }\n          100% { transform: translateY(0); }\n        }\n        \n        .reset-button {\n          margin-top: 25px;\n          padding: 12px 25px;\n          font-size: clamp(1rem, 2.5vw, 1.1rem);\n          background: linear-gradient(145deg, #2ecc71, #27ae60);\n          color: white;\n          border: none;\n          border-radius: 30px;\n          cursor: pointer;\n          font-weight: bold;\n          box-shadow: 0 4px 10px rgba(39, 174, 96, 0.3);\n          transition: all 0.3s ease;\n        }\n        \n        .reset-button:hover {\n          background: linear-gradient(145deg, #27ae60, #2ecc71);\n          transform: translateY(-2px);\n          box-shadow: 0 6px 12px rgba(39, 174, 96, 0.4);\n        }\n        \n        .game-settings {\n          display: flex;\n          flex-direction: column;\n          gap: 15px;\n          margin-bottom: 25px;\n          width: 100%;\n          max-width: 500px;\n          background-color: rgba(255, 255, 255, 0.7);\n          padding: 20px;\n          border-radius: 12px;\n          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .setting-group {\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n        }\n        \n        .setting-group label {\n          font-weight: 600;\n          font-size: clamp(1rem, 2.5vw, 1.1rem);\n          color: #2c3e50;\n        }\n        \n        .button-group {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 10px;\n        }\n        \n        .button-group button {\n          flex: 1;\n          min-width: 100px;\n          padding: 10px;\n          font-size: clamp(0.9rem, 2vw, 1rem);\n          border: none;\n          background: linear-gradient(145deg, #f5f7fa, #e4e9f2);\n          cursor: pointer;\n          border-radius: 30px;\n          box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n          transition: all 0.3s ease;\n          font-weight: 500;\n        }\n        \n        .button-group button:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n        }\n        \n        .button-group button.active {\n          background: linear-gradient(145deg, #3498db, #2980b9);\n          color: white;\n          font-weight: bold;\n          box-shadow: 0 4px 8px rgba(52, 152, 219, 0.3);\n        }\n        \n        .color-button.player1 {\n          color: white;\n          background: linear-gradient(145deg, #ff5e54, #e74c3c) !important;\n          box-shadow: 0 2px 5px rgba(231, 76, 60, 0.3) !important;\n        }\n        \n        .color-button.player2 {\n          background: linear-gradient(145deg, #ffeb3b, #f9ca24) !important;\n          box-shadow: 0 2px 5px rgba(249, 202, 36, 0.3) !important;\n        }\n        \n        .instructions {\n          margin-top: 25px;\n          text-align: center;\n          max-width: 500px;\n          background-color: rgba(255, 255, 255, 0.7);\n          padding: 15px 20px;\n          border-radius: 12px;\n          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .instructions h3 {\n          margin-bottom: 10px;\n          color: #2c3e50;\n        }\n        \n        .instructions p {\n          line-height: 1.6;\n        }\n        \n        /* Persona cards styling */\n        .persona-container {\n          display: flex;\n          gap: 15px;\n          flex-wrap: wrap;\n          justify-content: center;\n        }\n        \n        .persona-card {\n          flex: 1;\n          min-width: 120px;\n          max-width: 180px;\n          background: linear-gradient(145deg, #f5f7fa, #e4e9f2);\n          border-radius: 12px;\n          padding: 15px;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          position: relative;\n          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .persona-card:hover {\n          transform: translateY(-5px);\n          box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n        }\n        \n        .persona-card.active {\n          background: linear-gradient(145deg, #e1f5fe, #b3e5fc);\n          box-shadow: 0 8px 20px rgba(3, 169, 244, 0.2);\n          border: 2px solid #03a9f4;\n        }\n        \n        .persona-avatar {\n          font-size: 2.5rem;\n          margin-bottom: 10px;\n        }\n        \n        .persona-name {\n          font-weight: bold;\n          font-size: 1.1rem;\n          margin-bottom: 5px;\n          text-align: center;\n        }\n        \n        .persona-difficulty {\n          font-size: 0.9rem;\n          color: #7f8c8d;\n          margin-bottom: 5px;\n          text-align: center;\n        }\n        \n        .persona-info-icon {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n          font-size: 1rem;\n          cursor: pointer;\n          transition: transform 0.2s ease;\n        }\n        \n        .persona-info-icon:hover {\n          transform: scale(1.2);\n        }\n        \n        .persona-info-modal {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background-color: rgba(0, 0, 0, 0.5);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          z-index: 1000;\n        }\n        \n        .persona-info-content {\n          background-color: white;\n          border-radius: 12px;\n          padding: 20px;\n          max-width: 90%;\n          width: 350px;\n          box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n        }\n        \n        .persona-info-header {\n          display: flex;\n          align-items: center;\n          margin-bottom: 15px;\n          position: relative;\n        }\n        \n        .persona-info-avatar {\n          font-size: 2rem;\n          margin-right: 15px;\n        }\n        \n        .persona-info-header h3 {\n          margin: 0;\n        }\n        \n        .close-button {\n          position: absolute;\n          right: 0;\n          top: 0;\n          background: none;\n          border: none;\n          font-size: 1.5rem;\n          cursor: pointer;\n          color: #7f8c8d;\n        }\n        \n        .close-button:hover {\n          color: #2c3e50;\n        }\n        \n        /* Mobile-specific styles */\n        @media (max-width: 600px) {\n          .connect4-game {\n            padding: 15px 10px;\n          }\n          \n          .game-settings {\n            padding: 15px;\n          }\n          \n          .button-group {\n            flex-direction: column;\n          }\n          \n          .button-group button {\n            width: 100%;\n          }\n          \n          .persona-container {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 8px;\n            width: 100%;\n          }\n          \n          .persona-card {\n            min-width: 0;\n            width: 100%;\n            max-width: none;\n            padding: 10px 5px;\n            margin: 0;\n          }\n          \n          .persona-avatar {\n            font-size: 1.8rem;\n            margin-bottom: 5px;\n          }\n          \n          .persona-name {\n            font-size: 0.9rem;\n            margin-bottom: 3px;\n          }\n          \n          .persona-difficulty {\n            font-size: 0.75rem;\n            margin-bottom: 3px;\n          }\n          \n          .persona-info-icon {\n            top: 5px;\n            right: 5px;\n            font-size: 0.8rem;\n          }\n          \n          .board {\n            transform: scale(0.9);\n            margin: -10px auto;\n            max-width: 95vw;\n            overflow-x: auto;\n          }\n          \n          .cell {\n            width: clamp(30px, 8vw, 45px);\n            height: clamp(30px, 8vw, 45px);\n            margin: clamp(3px, 0.8vw, 5px);\n          }\n          \n          .board.medium .cell {\n            width: clamp(20px, 5vw, 30px);\n            height: clamp(20px, 5vw, 30px);\n            margin: clamp(2px, 0.5vw, 3px);\n          }\n          \n          .board.large .cell {\n            width: clamp(12px, 3vw, 18px);\n            height: clamp(12px, 3vw, 18px);\n            margin: clamp(1px, 0.3vw, 2px);\n          }\n          \n          /* Improve modal for mobile */\n          .persona-info-content {\n            padding: 15px;\n            max-width: 85%;\n            width: 300px;\n          }\n          \n          .persona-info-avatar {\n            font-size: 1.5rem;\n            margin-right: 10px;\n          }\n          \n          .persona-info-header h3 {\n            font-size: 1.2rem;\n          }\n        }\n        \n        /* Extra small screens */\n        @media (max-width: 350px) {\n          .persona-container {\n            grid-template-columns: repeat(3, 1fr);\n            gap: 5px;\n          }\n          \n          .persona-card {\n            padding: 8px 3px;\n          }\n          \n          .persona-avatar {\n            font-size: 1.5rem;\n            margin-bottom: 3px;\n          }\n          \n          .persona-name {\n            font-size: 0.8rem;\n            margin-bottom: 2px;\n          }\n          \n          .persona-difficulty {\n            font-size: 0.7rem;\n          }\n        }\n      `})]});};export default Connect4Game;","map":{"version":3,"names":["React","useState","useEffect","EMPTY","PLAYER_1","PLAYER_2","GRID_SIZES","DEFAULT_GRID_SIZE","GRID_DIMENSIONS","createEmptyBoard","findLowestEmptyRow","makeMove","isValidMove","getGameStatus","getCols","getAIMove","AI_LEVEL","AI_PERSONA","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Connect4Game","gridSize","setGridSize","board","setBoard","currentPlayer","setCurrentPlayer","gameStatus","setGameStatus","winner","setWinner","winningCells","setWinningCells","hoverColumn","setHoverColumn","gameMode","setGameMode","aiDifficulty","setAiDifficulty","ROSIE","aiThinking","setAiThinking","playerColor","setPlayerColor","dropAnimation","setDropAnimation","active","col","row","showPersonaInfo","setShowPersonaInfo","isAiTurn","aiTimer","setTimeout","makeAIMove","clearTimeout","aiPlayer","colIndex","handleMove","rowIndex","player","newBoard","status","handleColumnClick","resetGame","changeGridSize","size","changeGameMode","mode","changeAiDifficulty","difficulty","changePlayerColor","color","renderCell","value","cellClass","isWinningCell","some","cell","className","renderColumn","isColumnFull","isHovered","isPlayerTurn","isInteractive","onClick","onMouseEnter","onMouseLeave","children","map","renderGameStatus","currentPersona","winnerText","name","avatar","turnText","renderGameSettings","JIM","e","stopPropagation","DANGERMOUSE","description","renderGridSizeSelection","STANDARD","MEDIUM","LARGE","Array","length","fill","_"],"sources":["/Users/ianjbrowne/Library/Mobile Documents/com~apple~CloudDocs/ibrow10/Connect4/src/Connect4Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  EMPTY, \n  PLAYER_1, \n  PLAYER_2, \n  GRID_SIZES,\n  DEFAULT_GRID_SIZE,\n  GRID_DIMENSIONS,\n  createEmptyBoard, \n  findLowestEmptyRow,\n  makeMove,\n  isValidMove,\n  getGameStatus,\n  getCols\n} from './gameLogic';\nimport { getAIMove, AI_LEVEL, AI_PERSONA } from './aiPlayer';\n\n// Main Connect4 component\nconst Connect4Game = () => {\n  // Game state\n  const [gridSize, setGridSize] = useState(DEFAULT_GRID_SIZE);\n  const [board, setBoard] = useState(createEmptyBoard(gridSize));\n  const [currentPlayer, setCurrentPlayer] = useState(PLAYER_1);\n  const [gameStatus, setGameStatus] = useState('inProgress'); // 'inProgress', 'win', 'draw'\n  const [winner, setWinner] = useState(null);\n  const [winningCells, setWinningCells] = useState([]);\n  const [hoverColumn, setHoverColumn] = useState(null);\n  const [gameMode, setGameMode] = useState('player-vs-player'); // 'player-vs-player', 'player-vs-ai'\n  const [aiDifficulty, setAiDifficulty] = useState(AI_LEVEL.ROSIE); // Default to Rosie (medium)\n  const [aiThinking, setAiThinking] = useState(false);\n  const [playerColor, setPlayerColor] = useState(PLAYER_1); // Human player color\n  const [dropAnimation, setDropAnimation] = useState({ active: false, col: null, row: null });\n  const [showPersonaInfo, setShowPersonaInfo] = useState(false);\n  \n  // Use effect for AI turn\n  useEffect(() => {\n    // If it's AI's turn in player-vs-ai mode and game is in progress\n    const isAiTurn = gameMode === 'player-vs-ai' && \n                     currentPlayer !== playerColor && \n                     gameStatus === 'inProgress';\n    \n    if (isAiTurn && !dropAnimation.active) {\n      // Add a small delay to make it seem like AI is thinking\n      setAiThinking(true);\n      const aiTimer = setTimeout(() => {\n        makeAIMove();\n        setAiThinking(false);\n      }, 800);\n      \n      return () => clearTimeout(aiTimer);\n    }\n  }, [currentPlayer, gameStatus, gameMode, playerColor, board, dropAnimation]);\n  \n  // AI makes a move\n  const makeAIMove = () => {\n    if (gameStatus !== 'inProgress') return;\n    \n    const aiPlayer = playerColor === PLAYER_1 ? PLAYER_2 : PLAYER_1;\n    const colIndex = getAIMove(board, aiPlayer, aiDifficulty);\n    \n    if (colIndex !== -1) {\n      handleMove(colIndex);\n    }\n  };\n  \n  // Common function to handle moves (both player and AI)\n  const handleMove = (colIndex) => {\n    if (gameStatus !== 'inProgress' || !isValidMove(board, colIndex) || dropAnimation.active) return;\n    \n    const rowIndex = findLowestEmptyRow(board, colIndex);\n    if (rowIndex === -1) return; // Invalid move\n    \n    // Start drop animation\n    setDropAnimation({ active: true, col: colIndex, row: rowIndex, player: currentPlayer });\n    \n    // After animation completes, update the board\n    setTimeout(() => {\n      const { board: newBoard } = makeMove(board, colIndex, currentPlayer);\n      setBoard(newBoard);\n      \n      // Check game status after move\n      const status = getGameStatus(newBoard, rowIndex, colIndex);\n      \n      if (status.status === 'win') {\n        setGameStatus('win');\n        setWinner(status.winner);\n        setWinningCells(status.winningCells);\n      } else if (status.status === 'draw') {\n        setGameStatus('draw');\n      } else {\n        // Switch player\n        setCurrentPlayer(currentPlayer === PLAYER_1 ? PLAYER_2 : PLAYER_1);\n      }\n      \n      // End animation\n      setDropAnimation({ active: false, col: null, row: null });\n    }, 400); // Animation duration\n  };\n  \n  // Handle column click\n  const handleColumnClick = (colIndex) => {\n    // If it's AI's turn in player-vs-ai mode, do nothing\n    if (gameMode === 'player-vs-ai' && currentPlayer !== playerColor) {\n      return;\n    }\n    \n    handleMove(colIndex);\n  };\n  \n  // Reset the game\n  const resetGame = () => {\n    setBoard(createEmptyBoard(gridSize));\n    setCurrentPlayer(PLAYER_1);\n    setGameStatus('inProgress');\n    setWinner(null);\n    setWinningCells([]);\n    setHoverColumn(null);\n    setAiThinking(false);\n    setDropAnimation({ active: false, col: null, row: null });\n  };\n  \n  // Change grid size\n  const changeGridSize = (size) => {\n    setGridSize(size);\n    setBoard(createEmptyBoard(size));\n    setCurrentPlayer(PLAYER_1);\n    setGameStatus('inProgress');\n    setWinner(null);\n    setWinningCells([]);\n    setHoverColumn(null);\n    setAiThinking(false);\n    setDropAnimation({ active: false, col: null, row: null });\n  };\n  \n  // Change game mode\n  const changeGameMode = (mode) => {\n    setGameMode(mode);\n    resetGame();\n  };\n  \n  // Change AI difficulty\n  const changeAiDifficulty = (difficulty) => {\n    setAiDifficulty(difficulty);\n    resetGame();\n  };\n  \n  // Change player color\n  const changePlayerColor = (color) => {\n    setPlayerColor(color);\n    resetGame();\n  };\n  \n  // Render a cell\n  const renderCell = (value, rowIndex, colIndex) => {\n    let cellClass = 'cell';\n    \n    // Handle animation\n    if (dropAnimation.active && dropAnimation.col === colIndex && rowIndex <= dropAnimation.row) {\n      if (rowIndex === dropAnimation.row) {\n        cellClass += dropAnimation.player === PLAYER_1 ? ' player1 dropping' : ' player2 dropping';\n      }\n    } else if (value === PLAYER_1) {\n      cellClass += ' player1';\n    } else if (value === PLAYER_2) {\n      cellClass += ' player2';\n    }\n    \n    // Check if this cell is part of the winning combination\n    const isWinningCell = winningCells.some(cell => \n      cell.row === rowIndex && cell.col === colIndex\n    );\n    \n    if (isWinningCell) {\n      cellClass += ' winning';\n    }\n    \n    return (\n      <div \n        key={`${rowIndex}-${colIndex}`} \n        className={cellClass}\n      />\n    );\n  };\n  \n  // Render a column\n  const renderColumn = (colIndex) => {\n    const isColumnFull = findLowestEmptyRow(board, colIndex) === -1;\n    const isHovered = hoverColumn === colIndex && !isColumnFull && gameStatus === 'inProgress';\n    const isPlayerTurn = gameMode !== 'player-vs-ai' || currentPlayer === playerColor;\n    const isInteractive = gameStatus === 'inProgress' && !dropAnimation.active && isPlayerTurn;\n    \n    return (\n      <div \n        key={colIndex} \n        className={`column ${isHovered ? 'hover' : ''} ${isColumnFull ? 'full' : ''} ${!isInteractive ? 'not-interactive' : ''} ${gridSize}`}\n        onClick={() => handleColumnClick(colIndex)}\n        onMouseEnter={() => setHoverColumn(colIndex)}\n        onMouseLeave={() => setHoverColumn(null)}\n      >\n        {board.map((row, rowIndex) => renderCell(row[colIndex], rowIndex, colIndex))}\n      </div>\n    );\n  };\n  \n  // Game status message\n  const renderGameStatus = () => {\n    // Get current AI persona if in AI mode\n    const currentPersona = AI_PERSONA[aiDifficulty];\n    \n    if (gameStatus === 'win') {\n      const winnerText = gameMode === 'player-vs-ai' \n        ? (winner === playerColor ? 'You win!' : `${currentPersona.name} wins!`) \n        : `Player ${winner} wins!`;\n      return <div className=\"status\">{winnerText}</div>;\n    } else if (gameStatus === 'draw') {\n      return <div className=\"status\">Game ended in a draw!</div>;\n    } else if (aiThinking) {\n      return <div className=\"status thinking\">\n        <span className=\"ai-avatar\">{currentPersona.avatar}</span> \n        {currentPersona.name} is thinking...\n      </div>;\n    } else if (dropAnimation.active) {\n      return <div className=\"status\">Making move...</div>;\n    } else {\n      const turnText = gameMode === 'player-vs-ai'\n        ? (currentPlayer === playerColor ? 'Your turn' : `${currentPersona.name}'s turn ${currentPersona.avatar}`)\n        : `Player ${currentPlayer}'s turn`;\n      return <div className=\"status\">{turnText}</div>;\n    }\n  };\n  \n  // Render game settings\n  const renderGameSettings = () => {\n    return (\n      <div className=\"game-settings\">\n        <div className=\"setting-group\">\n          <label>Game Mode:</label>\n          <div className=\"button-group\">\n            <button \n              className={`mode-button ${gameMode === 'player-vs-player' ? 'active' : ''}`}\n              onClick={() => changeGameMode('player-vs-player')}\n            >\n              Player vs Player\n            </button>\n            <button \n              className={`mode-button ${gameMode === 'player-vs-ai' ? 'active' : ''}`}\n              onClick={() => changeGameMode('player-vs-ai')}\n            >\n              Player vs AI\n            </button>\n          </div>\n        </div>\n        \n        {gameMode === 'player-vs-ai' && (\n          <>\n            <div className=\"setting-group\">\n              <label>Choose Your Opponent:</label>\n              <div className=\"persona-container\">\n                <div \n                  className={`persona-card ${aiDifficulty === AI_LEVEL.JIM ? 'active' : ''}`}\n                  onClick={() => changeAiDifficulty(AI_LEVEL.JIM)}\n                >\n                  <div className=\"persona-avatar\">{AI_PERSONA[AI_LEVEL.JIM].avatar}</div>\n                  <div className=\"persona-name\">{AI_PERSONA[AI_LEVEL.JIM].name}</div>\n                  <div className=\"persona-difficulty\">Beginner</div>\n                  <div className=\"persona-info-icon\" onClick={(e) => {\n                    e.stopPropagation();\n                    setShowPersonaInfo(AI_LEVEL.JIM);\n                  }}>ℹ️</div>\n                </div>\n                \n                <div \n                  className={`persona-card ${aiDifficulty === AI_LEVEL.ROSIE ? 'active' : ''}`}\n                  onClick={() => changeAiDifficulty(AI_LEVEL.ROSIE)}\n                >\n                  <div className=\"persona-avatar\">{AI_PERSONA[AI_LEVEL.ROSIE].avatar}</div>\n                  <div className=\"persona-name\">{AI_PERSONA[AI_LEVEL.ROSIE].name}</div>\n                  <div className=\"persona-difficulty\">Intermediate</div>\n                  <div className=\"persona-info-icon\" onClick={(e) => {\n                    e.stopPropagation();\n                    setShowPersonaInfo(AI_LEVEL.ROSIE);\n                  }}>ℹ️</div>\n                </div>\n                \n                <div \n                  className={`persona-card ${aiDifficulty === AI_LEVEL.DANGERMOUSE ? 'active' : ''}`}\n                  onClick={() => changeAiDifficulty(AI_LEVEL.DANGERMOUSE)}\n                >\n                  <div className=\"persona-avatar\">{AI_PERSONA[AI_LEVEL.DANGERMOUSE].avatar}</div>\n                  <div className=\"persona-name\">{AI_PERSONA[AI_LEVEL.DANGERMOUSE].name}</div>\n                  <div className=\"persona-difficulty\">Expert</div>\n                  <div className=\"persona-info-icon\" onClick={(e) => {\n                    e.stopPropagation();\n                    setShowPersonaInfo(AI_LEVEL.DANGERMOUSE);\n                  }}>ℹ️</div>\n                </div>\n              </div>\n              \n              {showPersonaInfo && (\n                <div className=\"persona-info-modal\">\n                  <div className=\"persona-info-content\">\n                    <div className=\"persona-info-header\">\n                      <span className=\"persona-info-avatar\">{AI_PERSONA[showPersonaInfo].avatar}</span>\n                      <h3>{AI_PERSONA[showPersonaInfo].name}</h3>\n                      <button className=\"close-button\" onClick={() => setShowPersonaInfo(false)}>×</button>\n                    </div>\n                    <p>{AI_PERSONA[showPersonaInfo].description}</p>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"setting-group\">\n              <label>Your Color:</label>\n              <div className=\"button-group\">\n                <button \n                  className={`color-button player1 ${playerColor === PLAYER_1 ? 'active' : ''}`}\n                  onClick={() => changePlayerColor(PLAYER_1)}\n                >\n                  Red\n                </button>\n                <button \n                  className={`color-button player2 ${playerColor === PLAYER_2 ? 'active' : ''}`}\n                  onClick={() => changePlayerColor(PLAYER_2)}\n                >\n                  Yellow\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  // Render grid size selection\n  const renderGridSizeSelection = () => {\n    return (\n      <div className=\"setting-group\">\n        <label>Grid Size:</label>\n        <div className=\"button-group\">\n          <button \n            className={`size-button ${gridSize === GRID_SIZES.STANDARD ? 'active' : ''}`}\n            onClick={() => changeGridSize(GRID_SIZES.STANDARD)}\n          >\n            Standard (7×6)\n          </button>\n          <button \n            className={`size-button ${gridSize === GRID_SIZES.MEDIUM ? 'active' : ''}`}\n            onClick={() => changeGridSize(GRID_SIZES.MEDIUM)}\n          >\n            Medium (11×11)\n          </button>\n          <button \n            className={`size-button ${gridSize === GRID_SIZES.LARGE ? 'active' : ''}`}\n            onClick={() => changeGridSize(GRID_SIZES.LARGE)}\n          >\n            Large (21×21)\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"connect4-game\">\n      <h1>Connect 4</h1>\n      \n      {renderGameSettings()}\n      {renderGridSizeSelection()}\n      \n      {renderGameStatus()}\n      \n      <div className={`board ${gridSize}`}>\n        {Array(board[0].length).fill().map((_, colIndex) => renderColumn(colIndex))}\n      </div>\n      \n      <button className=\"reset-button\" onClick={resetGame}>\n        Reset Game\n      </button>\n      \n      <div className=\"instructions\">\n        <h3>How to Play:</h3>\n        <p>Click on a column to drop your disc. The goal is to connect 4 of your discs in a row - horizontally, vertically, or diagonally.</p>\n      </div>\n      \n      <style jsx>{`\n        .connect4-game {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n          margin: 0 auto;\n          max-width: 100%;\n          padding: 20px;\n          background: linear-gradient(135deg, #f5f7fa 0%, #e4e9f2 100%);\n          min-height: 100vh;\n          color: #333;\n        }\n        \n        h1 {\n          color: #2c3e50;\n          margin-bottom: 20px;\n          font-size: clamp(1.8rem, 5vw, 2.5rem);\n          text-shadow: 1px 1px 3px rgba(0,0,0,0.1);\n          text-align: center;\n        }\n        \n        .status {\n          font-size: clamp(1.1rem, 3vw, 1.3rem);\n          margin-bottom: 20px;\n          font-weight: 600;\n          text-align: center;\n          min-height: 40px;\n          padding: 10px;\n          border-radius: 8px;\n          background-color: rgba(255, 255, 255, 0.7);\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 8px;\n        }\n        \n        .status.thinking {\n          color: #3498db;\n          animation: pulse-subtle 2s infinite;\n        }\n        \n        .ai-avatar {\n          font-size: 1.4em;\n          margin-right: 5px;\n        }\n        \n        .board {\n          display: flex;\n          background: linear-gradient(145deg, #3498db, #2980b9);\n          padding: clamp(8px, 2vw, 15px);\n          border-radius: 12px;\n          box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15), inset 0 -5px 0 rgba(0, 0, 0, 0.1);\n          margin: 0 auto;\n          width: fit-content;\n          transition: transform 0.3s ease;\n        }\n        \n        .board:hover {\n          transform: translateY(-5px);\n        }\n        \n        .column {\n          display: flex;\n          flex-direction: column;\n          cursor: pointer;\n          position: relative;\n          transition: all 0.2s ease;\n        }\n        \n        .column.hover {\n          background-color: rgba(255, 255, 255, 0.2);\n          transform: translateY(-5px);\n        }\n        \n        .column.full, .column.not-interactive {\n          cursor: not-allowed;\n          opacity: 0.8;\n        }\n        \n        .cell {\n          width: clamp(35px, 10vw, 60px);\n          height: clamp(35px, 10vw, 60px);\n          margin: clamp(4px, 1vw, 6px);\n          border-radius: 50%;\n          background-color: #ecf0f1;\n          box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.1);\n          transition: all 0.3s ease;\n          position: relative;\n        }\n        \n        /* Grid size specific styles */\n        .board.medium .cell {\n          width: clamp(25px, 7vw, 45px);\n          height: clamp(25px, 7vw, 45px);\n          margin: clamp(2px, 0.7vw, 4px);\n        }\n        \n        .board.large .cell {\n          width: clamp(15px, 4vw, 25px);\n          height: clamp(15px, 4vw, 25px);\n          margin: clamp(1px, 0.4vw, 2px);\n        }\n        \n        .cell.player1 {\n          background: linear-gradient(145deg, #ff5e54, #e74c3c);\n          box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.2), 0 4px 8px rgba(231, 76, 60, 0.3);\n        }\n        \n        .cell.player2 {\n          background: linear-gradient(145deg, #ffeb3b, #f9ca24);\n          box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(249, 202, 36, 0.3);\n        }\n        \n        .cell.winning {\n          box-shadow: 0 0 15px 5px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2);\n          animation: pulse 1.5s infinite;\n          z-index: 1;\n        }\n        \n        .cell.dropping {\n          animation: dropAnimation 0.5s cubic-bezier(0.215, 0.610, 0.355, 1.000);\n        }\n        \n        @keyframes pulse {\n          0% { box-shadow: 0 0 15px 5px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2); }\n          50% { box-shadow: 0 0 25px 8px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2); }\n          100% { box-shadow: 0 0 15px 5px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2); }\n        }\n        \n        @keyframes pulse-subtle {\n          0% { opacity: 1; }\n          50% { opacity: 0.8; }\n          100% { opacity: 1; }\n        }\n        \n        @keyframes dropAnimation {\n          0% { opacity: 0; transform: translateY(-500%); }\n          60% { opacity: 1; transform: translateY(15%); }\n          80% { transform: translateY(-10%); }\n          100% { transform: translateY(0); }\n        }\n        \n        .reset-button {\n          margin-top: 25px;\n          padding: 12px 25px;\n          font-size: clamp(1rem, 2.5vw, 1.1rem);\n          background: linear-gradient(145deg, #2ecc71, #27ae60);\n          color: white;\n          border: none;\n          border-radius: 30px;\n          cursor: pointer;\n          font-weight: bold;\n          box-shadow: 0 4px 10px rgba(39, 174, 96, 0.3);\n          transition: all 0.3s ease;\n        }\n        \n        .reset-button:hover {\n          background: linear-gradient(145deg, #27ae60, #2ecc71);\n          transform: translateY(-2px);\n          box-shadow: 0 6px 12px rgba(39, 174, 96, 0.4);\n        }\n        \n        .game-settings {\n          display: flex;\n          flex-direction: column;\n          gap: 15px;\n          margin-bottom: 25px;\n          width: 100%;\n          max-width: 500px;\n          background-color: rgba(255, 255, 255, 0.7);\n          padding: 20px;\n          border-radius: 12px;\n          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .setting-group {\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n        }\n        \n        .setting-group label {\n          font-weight: 600;\n          font-size: clamp(1rem, 2.5vw, 1.1rem);\n          color: #2c3e50;\n        }\n        \n        .button-group {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 10px;\n        }\n        \n        .button-group button {\n          flex: 1;\n          min-width: 100px;\n          padding: 10px;\n          font-size: clamp(0.9rem, 2vw, 1rem);\n          border: none;\n          background: linear-gradient(145deg, #f5f7fa, #e4e9f2);\n          cursor: pointer;\n          border-radius: 30px;\n          box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n          transition: all 0.3s ease;\n          font-weight: 500;\n        }\n        \n        .button-group button:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n        }\n        \n        .button-group button.active {\n          background: linear-gradient(145deg, #3498db, #2980b9);\n          color: white;\n          font-weight: bold;\n          box-shadow: 0 4px 8px rgba(52, 152, 219, 0.3);\n        }\n        \n        .color-button.player1 {\n          color: white;\n          background: linear-gradient(145deg, #ff5e54, #e74c3c) !important;\n          box-shadow: 0 2px 5px rgba(231, 76, 60, 0.3) !important;\n        }\n        \n        .color-button.player2 {\n          background: linear-gradient(145deg, #ffeb3b, #f9ca24) !important;\n          box-shadow: 0 2px 5px rgba(249, 202, 36, 0.3) !important;\n        }\n        \n        .instructions {\n          margin-top: 25px;\n          text-align: center;\n          max-width: 500px;\n          background-color: rgba(255, 255, 255, 0.7);\n          padding: 15px 20px;\n          border-radius: 12px;\n          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .instructions h3 {\n          margin-bottom: 10px;\n          color: #2c3e50;\n        }\n        \n        .instructions p {\n          line-height: 1.6;\n        }\n        \n        /* Persona cards styling */\n        .persona-container {\n          display: flex;\n          gap: 15px;\n          flex-wrap: wrap;\n          justify-content: center;\n        }\n        \n        .persona-card {\n          flex: 1;\n          min-width: 120px;\n          max-width: 180px;\n          background: linear-gradient(145deg, #f5f7fa, #e4e9f2);\n          border-radius: 12px;\n          padding: 15px;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          position: relative;\n          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .persona-card:hover {\n          transform: translateY(-5px);\n          box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n        }\n        \n        .persona-card.active {\n          background: linear-gradient(145deg, #e1f5fe, #b3e5fc);\n          box-shadow: 0 8px 20px rgba(3, 169, 244, 0.2);\n          border: 2px solid #03a9f4;\n        }\n        \n        .persona-avatar {\n          font-size: 2.5rem;\n          margin-bottom: 10px;\n        }\n        \n        .persona-name {\n          font-weight: bold;\n          font-size: 1.1rem;\n          margin-bottom: 5px;\n          text-align: center;\n        }\n        \n        .persona-difficulty {\n          font-size: 0.9rem;\n          color: #7f8c8d;\n          margin-bottom: 5px;\n          text-align: center;\n        }\n        \n        .persona-info-icon {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n          font-size: 1rem;\n          cursor: pointer;\n          transition: transform 0.2s ease;\n        }\n        \n        .persona-info-icon:hover {\n          transform: scale(1.2);\n        }\n        \n        .persona-info-modal {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background-color: rgba(0, 0, 0, 0.5);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          z-index: 1000;\n        }\n        \n        .persona-info-content {\n          background-color: white;\n          border-radius: 12px;\n          padding: 20px;\n          max-width: 90%;\n          width: 350px;\n          box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n        }\n        \n        .persona-info-header {\n          display: flex;\n          align-items: center;\n          margin-bottom: 15px;\n          position: relative;\n        }\n        \n        .persona-info-avatar {\n          font-size: 2rem;\n          margin-right: 15px;\n        }\n        \n        .persona-info-header h3 {\n          margin: 0;\n        }\n        \n        .close-button {\n          position: absolute;\n          right: 0;\n          top: 0;\n          background: none;\n          border: none;\n          font-size: 1.5rem;\n          cursor: pointer;\n          color: #7f8c8d;\n        }\n        \n        .close-button:hover {\n          color: #2c3e50;\n        }\n        \n        /* Mobile-specific styles */\n        @media (max-width: 600px) {\n          .connect4-game {\n            padding: 15px 10px;\n          }\n          \n          .game-settings {\n            padding: 15px;\n          }\n          \n          .button-group {\n            flex-direction: column;\n          }\n          \n          .button-group button {\n            width: 100%;\n          }\n          \n          .persona-container {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 8px;\n            width: 100%;\n          }\n          \n          .persona-card {\n            min-width: 0;\n            width: 100%;\n            max-width: none;\n            padding: 10px 5px;\n            margin: 0;\n          }\n          \n          .persona-avatar {\n            font-size: 1.8rem;\n            margin-bottom: 5px;\n          }\n          \n          .persona-name {\n            font-size: 0.9rem;\n            margin-bottom: 3px;\n          }\n          \n          .persona-difficulty {\n            font-size: 0.75rem;\n            margin-bottom: 3px;\n          }\n          \n          .persona-info-icon {\n            top: 5px;\n            right: 5px;\n            font-size: 0.8rem;\n          }\n          \n          .board {\n            transform: scale(0.9);\n            margin: -10px auto;\n            max-width: 95vw;\n            overflow-x: auto;\n          }\n          \n          .cell {\n            width: clamp(30px, 8vw, 45px);\n            height: clamp(30px, 8vw, 45px);\n            margin: clamp(3px, 0.8vw, 5px);\n          }\n          \n          .board.medium .cell {\n            width: clamp(20px, 5vw, 30px);\n            height: clamp(20px, 5vw, 30px);\n            margin: clamp(2px, 0.5vw, 3px);\n          }\n          \n          .board.large .cell {\n            width: clamp(12px, 3vw, 18px);\n            height: clamp(12px, 3vw, 18px);\n            margin: clamp(1px, 0.3vw, 2px);\n          }\n          \n          /* Improve modal for mobile */\n          .persona-info-content {\n            padding: 15px;\n            max-width: 85%;\n            width: 300px;\n          }\n          \n          .persona-info-avatar {\n            font-size: 1.5rem;\n            margin-right: 10px;\n          }\n          \n          .persona-info-header h3 {\n            font-size: 1.2rem;\n          }\n        }\n        \n        /* Extra small screens */\n        @media (max-width: 350px) {\n          .persona-container {\n            grid-template-columns: repeat(3, 1fr);\n            gap: 5px;\n          }\n          \n          .persona-card {\n            padding: 8px 3px;\n          }\n          \n          .persona-avatar {\n            font-size: 1.5rem;\n            margin-bottom: 3px;\n          }\n          \n          .persona-name {\n            font-size: 0.8rem;\n            margin-bottom: 2px;\n          }\n          \n          .persona-difficulty {\n            font-size: 0.7rem;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Connect4Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}