{"ast":null,"code":"var _jsxFileName = \"/Users/ianjbrowne/Library/Mobile Documents/com~apple~CloudDocs/ibrow10/Connect4/src/Connect4Game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ROWS, COLS, EMPTY, PLAYER_1, PLAYER_2, createEmptyBoard, findLowestEmptyRow, makeMove, isValidMove, getGameStatus } from './gameLogic';\nimport { getAIMove, AI_LEVEL, AI_PERSONA } from './aiPlayer';\n\n// Main Connect4 component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Connect4Game = () => {\n  _s();\n  // Game state\n  const [board, setBoard] = useState(createEmptyBoard());\n  const [currentPlayer, setCurrentPlayer] = useState(PLAYER_1);\n  const [gameStatus, setGameStatus] = useState('inProgress'); // 'inProgress', 'win', 'draw'\n  const [winner, setWinner] = useState(null);\n  const [winningCells, setWinningCells] = useState([]);\n  const [hoverColumn, setHoverColumn] = useState(null);\n  const [gameMode, setGameMode] = useState('player-vs-player'); // 'player-vs-player', 'player-vs-ai'\n  const [aiDifficulty, setAiDifficulty] = useState(AI_LEVEL.ROSIE); // Default to Rosie (medium)\n  const [aiThinking, setAiThinking] = useState(false);\n  const [playerColor, setPlayerColor] = useState(PLAYER_1); // Human player color\n  const [dropAnimation, setDropAnimation] = useState({\n    active: false,\n    col: null,\n    row: null\n  });\n  const [showPersonaInfo, setShowPersonaInfo] = useState(false);\n\n  // Use effect for AI turn\n  useEffect(() => {\n    // If it's AI's turn in player-vs-ai mode and game is in progress\n    const isAiTurn = gameMode === 'player-vs-ai' && currentPlayer !== playerColor && gameStatus === 'inProgress';\n    if (isAiTurn && !dropAnimation.active) {\n      // Add a small delay to make it seem like AI is thinking\n      setAiThinking(true);\n      const aiTimer = setTimeout(() => {\n        makeAIMove();\n        setAiThinking(false);\n      }, 800);\n      return () => clearTimeout(aiTimer);\n    }\n  }, [currentPlayer, gameStatus, gameMode, playerColor, board, dropAnimation]);\n\n  // AI makes a move\n  const makeAIMove = () => {\n    if (gameStatus !== 'inProgress') return;\n    const aiPlayer = playerColor === PLAYER_1 ? PLAYER_2 : PLAYER_1;\n    const colIndex = getAIMove(board, aiPlayer, aiDifficulty);\n    if (colIndex !== -1) {\n      handleMove(colIndex);\n    }\n  };\n\n  // Common function to handle moves (both player and AI)\n  const handleMove = colIndex => {\n    if (gameStatus !== 'inProgress' || !isValidMove(board, colIndex) || dropAnimation.active) return;\n    const rowIndex = findLowestEmptyRow(board, colIndex);\n    if (rowIndex === -1) return; // Invalid move\n\n    // Start drop animation\n    setDropAnimation({\n      active: true,\n      col: colIndex,\n      row: rowIndex,\n      player: currentPlayer\n    });\n\n    // After animation completes, update the board\n    setTimeout(() => {\n      const {\n        board: newBoard\n      } = makeMove(board, colIndex, currentPlayer);\n      setBoard(newBoard);\n\n      // Check game status after move\n      const status = getGameStatus(newBoard, rowIndex, colIndex);\n      if (status.status === 'win') {\n        setGameStatus('win');\n        setWinner(status.winner);\n        setWinningCells(status.winningCells);\n      } else if (status.status === 'draw') {\n        setGameStatus('draw');\n      } else {\n        // Switch player\n        setCurrentPlayer(currentPlayer === PLAYER_1 ? PLAYER_2 : PLAYER_1);\n      }\n\n      // End animation\n      setDropAnimation({\n        active: false,\n        col: null,\n        row: null\n      });\n    }, 400); // Animation duration\n  };\n\n  // Handle column click\n  const handleColumnClick = colIndex => {\n    // If it's AI's turn in player-vs-ai mode, do nothing\n    if (gameMode === 'player-vs-ai' && currentPlayer !== playerColor) {\n      return;\n    }\n    handleMove(colIndex);\n  };\n\n  // Reset the game\n  const resetGame = () => {\n    setBoard(createEmptyBoard());\n    setCurrentPlayer(PLAYER_1);\n    setGameStatus('inProgress');\n    setWinner(null);\n    setWinningCells([]);\n    setHoverColumn(null);\n    setAiThinking(false);\n    setDropAnimation({\n      active: false,\n      col: null,\n      row: null\n    });\n  };\n\n  // Change game mode\n  const changeGameMode = mode => {\n    setGameMode(mode);\n    resetGame();\n  };\n\n  // Change AI difficulty\n  const changeAiDifficulty = difficulty => {\n    setAiDifficulty(difficulty);\n    resetGame();\n  };\n\n  // Change player color\n  const changePlayerColor = color => {\n    setPlayerColor(color);\n    resetGame();\n  };\n\n  // Render a cell\n  const renderCell = (value, rowIndex, colIndex) => {\n    let cellClass = 'cell';\n\n    // Handle animation\n    if (dropAnimation.active && dropAnimation.col === colIndex && rowIndex <= dropAnimation.row) {\n      if (rowIndex === dropAnimation.row) {\n        cellClass += dropAnimation.player === PLAYER_1 ? ' player1 dropping' : ' player2 dropping';\n      }\n    } else if (value === PLAYER_1) {\n      cellClass += ' player1';\n    } else if (value === PLAYER_2) {\n      cellClass += ' player2';\n    }\n\n    // Check if this cell is part of the winning combination\n    const isWinningCell = winningCells.some(cell => cell.row === rowIndex && cell.col === colIndex);\n    if (isWinningCell) {\n      cellClass += ' winning';\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cellClass\n    }, `${rowIndex}-${colIndex}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render a column\n  const renderColumn = colIndex => {\n    const isColumnFull = findLowestEmptyRow(board, colIndex) === -1;\n    const isHovered = hoverColumn === colIndex && !isColumnFull && gameStatus === 'inProgress';\n    const isPlayerTurn = gameMode !== 'player-vs-ai' || currentPlayer === playerColor;\n    const isInteractive = gameStatus === 'inProgress' && !dropAnimation.active && isPlayerTurn;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `column ${isHovered ? 'hover' : ''} ${isColumnFull ? 'full' : ''} ${!isInteractive ? 'not-interactive' : ''}`,\n      onClick: () => handleColumnClick(colIndex),\n      onMouseEnter: () => setHoverColumn(colIndex),\n      onMouseLeave: () => setHoverColumn(null),\n      children: board.map((row, rowIndex) => renderCell(row[colIndex], rowIndex, colIndex))\n    }, colIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Game status message\n  const renderGameStatus = () => {\n    // Get current AI persona if in AI mode\n    const currentPersona = AI_PERSONA[aiDifficulty];\n    if (gameStatus === 'win') {\n      const winnerText = gameMode === 'player-vs-ai' ? winner === playerColor ? 'You win!' : `${currentPersona.name} wins!` : `Player ${winner} wins!`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: winnerText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 14\n      }, this);\n    } else if (gameStatus === 'draw') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: \"Game ended in a draw!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 14\n      }, this);\n    } else if (aiThinking) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status thinking\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-avatar\",\n          children: currentPersona.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this), currentPersona.name, \" is thinking...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 14\n      }, this);\n    } else if (dropAnimation.active) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: \"Making move...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 14\n      }, this);\n    } else {\n      const turnText = gameMode === 'player-vs-ai' ? currentPlayer === playerColor ? 'Your turn' : `${currentPersona.name}'s turn ${currentPersona.avatar}` : `Player ${currentPlayer}'s turn`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: turnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  // Render game settings\n  const renderGameSettings = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Game Mode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `mode-button ${gameMode === 'player-vs-player' ? 'active' : ''}`,\n            onClick: () => changeGameMode('player-vs-player'),\n            children: \"Player vs Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `mode-button ${gameMode === 'player-vs-ai' ? 'active' : ''}`,\n            onClick: () => changeGameMode('player-vs-ai'),\n            children: \"Player vs AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), gameMode === 'player-vs-ai' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Choose Your Opponent:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"persona-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `persona-card ${aiDifficulty === AI_LEVEL.JIM ? 'active' : ''}`,\n              onClick: () => changeAiDifficulty(AI_LEVEL.JIM),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"persona-avatar\",\n                children: AI_PERSONA[AI_LEVEL.JIM].avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"persona-name\",\n                children: AI_PERSONA[AI_LEVEL.JIM].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"persona-difficulty\",\n                children: \"Beginner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"persona-info-icon\",\n                onClick: e => {\n                  e.stopPropagation();\n                  setShowPersonaInfo(AI_LEVEL.JIM);\n                },\n                children: \"\\u2139\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `persona-card ${aiDifficulty === AI_LEVEL.ROSIE ? 'active' : ''}`,\n              onClick: () => changeAiDifficulty(AI_LEVEL.ROSIE),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"persona-avatar\",\n                children: AI_PERSONA[AI_LEVEL.ROSIE].avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"persona-name\",\n                children: AI_PERSONA[AI_LEVEL.ROSIE].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"persona-difficulty\",\n                children: \"Intermediate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"persona-info-icon\",\n                onClick: e => {\n                  e.stopPropagation();\n                  setShowPersonaInfo(AI_LEVEL.ROSIE);\n                },\n                children: \"\\u2139\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `persona-card ${aiDifficulty === AI_LEVEL.DANGERMOUSE ? 'active' : ''}`,\n              onClick: () => changeAiDifficulty(AI_LEVEL.DANGERMOUSE),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"persona-avatar\",\n                children: AI_PERSONA[AI_LEVEL.DANGERMOUSE].avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"persona-name\",\n                children: AI_PERSONA[AI_LEVEL.DANGERMOUSE].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"persona-difficulty\",\n                children: \"Expert\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"persona-info-icon\",\n                onClick: e => {\n                  e.stopPropagation();\n                  setShowPersonaInfo(AI_LEVEL.DANGERMOUSE);\n                },\n                children: \"\\u2139\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), showPersonaInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"persona-info-modal\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"persona-info-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"persona-info-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"persona-info-avatar\",\n                  children: AI_PERSONA[showPersonaInfo].avatar\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: AI_PERSONA[showPersonaInfo].name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"close-button\",\n                  onClick: () => setShowPersonaInfo(false),\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: AI_PERSONA[showPersonaInfo].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Your Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `color-button player1 ${playerColor === PLAYER_1 ? 'active' : ''}`,\n              onClick: () => changePlayerColor(PLAYER_1),\n              children: \"Red\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `color-button player2 ${playerColor === PLAYER_2 ? 'active' : ''}`,\n              onClick: () => changePlayerColor(PLAYER_2),\n              children: \"Yellow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect4-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Connect 4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), renderGameSettings(), renderGameStatus(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: Array(COLS).fill().map((_, colIndex) => renderColumn(colIndex))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: resetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How to Play:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on a column to drop your disc. The goal is to connect 4 of your discs in a row - horizontally, vertically, or diagonally.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .connect4-game {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n          margin: 0 auto;\n          max-width: 100%;\n          padding: 20px;\n          background: linear-gradient(135deg, #f5f7fa 0%, #e4e9f2 100%);\n          min-height: 100vh;\n          color: #333;\n        }\n        \n        h1 {\n          color: #2c3e50;\n          margin-bottom: 20px;\n          font-size: clamp(1.8rem, 5vw, 2.5rem);\n          text-shadow: 1px 1px 3px rgba(0,0,0,0.1);\n          text-align: center;\n        }\n        \n        .status {\n          font-size: clamp(1.1rem, 3vw, 1.3rem);\n          margin-bottom: 20px;\n          font-weight: 600;\n          text-align: center;\n          min-height: 40px;\n          padding: 10px;\n          border-radius: 8px;\n          background-color: rgba(255, 255, 255, 0.7);\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 8px;\n        }\n        \n        .status.thinking {\n          color: #3498db;\n          animation: pulse-subtle 2s infinite;\n        }\n        \n        .ai-avatar {\n          font-size: 1.4em;\n          margin-right: 5px;\n        }\n        \n        .board {\n          display: flex;\n          background: linear-gradient(145deg, #3498db, #2980b9);\n          padding: clamp(8px, 2vw, 15px);\n          border-radius: 12px;\n          box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15), inset 0 -5px 0 rgba(0, 0, 0, 0.1);\n          margin: 0 auto;\n          width: fit-content;\n          transition: transform 0.3s ease;\n        }\n        \n        .board:hover {\n          transform: translateY(-5px);\n        }\n        \n        .column {\n          display: flex;\n          flex-direction: column;\n          cursor: pointer;\n          position: relative;\n          transition: all 0.2s ease;\n        }\n        \n        .column.hover {\n          background-color: rgba(255, 255, 255, 0.2);\n          transform: translateY(-5px);\n        }\n        \n        .column.full, .column.not-interactive {\n          cursor: not-allowed;\n          opacity: 0.8;\n        }\n        \n        .cell {\n          width: clamp(35px, 10vw, 60px);\n          height: clamp(35px, 10vw, 60px);\n          margin: clamp(4px, 1vw, 6px);\n          border-radius: 50%;\n          background-color: #ecf0f1;\n          box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.1);\n          transition: all 0.3s ease;\n          position: relative;\n        }\n        \n        .cell.player1 {\n          background: linear-gradient(145deg, #ff5e54, #e74c3c);\n          box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.2), 0 4px 8px rgba(231, 76, 60, 0.3);\n        }\n        \n        .cell.player2 {\n          background: linear-gradient(145deg, #ffeb3b, #f9ca24);\n          box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(249, 202, 36, 0.3);\n        }\n        \n        .cell.winning {\n          box-shadow: 0 0 15px 5px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2);\n          animation: pulse 1.5s infinite;\n          z-index: 1;\n        }\n        \n        .cell.dropping {\n          animation: dropAnimation 0.5s cubic-bezier(0.215, 0.610, 0.355, 1.000);\n        }\n        \n        @keyframes pulse {\n          0% { box-shadow: 0 0 15px 5px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2); }\n          50% { box-shadow: 0 0 25px 8px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2); }\n          100% { box-shadow: 0 0 15px 5px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2); }\n        }\n        \n        @keyframes pulse-subtle {\n          0% { opacity: 1; }\n          50% { opacity: 0.8; }\n          100% { opacity: 1; }\n        }\n        \n        @keyframes dropAnimation {\n          0% { opacity: 0; transform: translateY(-500%); }\n          60% { opacity: 1; transform: translateY(15%); }\n          80% { transform: translateY(-10%); }\n          100% { transform: translateY(0); }\n        }\n        \n        .reset-button {\n          margin-top: 25px;\n          padding: 12px 25px;\n          font-size: clamp(1rem, 2.5vw, 1.1rem);\n          background: linear-gradient(145deg, #2ecc71, #27ae60);\n          color: white;\n          border: none;\n          border-radius: 30px;\n          cursor: pointer;\n          font-weight: bold;\n          box-shadow: 0 4px 10px rgba(39, 174, 96, 0.3);\n          transition: all 0.3s ease;\n        }\n        \n        .reset-button:hover {\n          background: linear-gradient(145deg, #27ae60, #2ecc71);\n          transform: translateY(-2px);\n          box-shadow: 0 6px 12px rgba(39, 174, 96, 0.4);\n        }\n        \n        .game-settings {\n          display: flex;\n          flex-direction: column;\n          gap: 15px;\n          margin-bottom: 25px;\n          width: 100%;\n          max-width: 500px;\n          background-color: rgba(255, 255, 255, 0.7);\n          padding: 20px;\n          border-radius: 12px;\n          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .setting-group {\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n        }\n        \n        .setting-group label {\n          font-weight: 600;\n          font-size: clamp(1rem, 2.5vw, 1.1rem);\n          color: #2c3e50;\n        }\n        \n        .button-group {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 10px;\n        }\n        \n        .button-group button {\n          flex: 1;\n          min-width: 100px;\n          padding: 10px;\n          font-size: clamp(0.9rem, 2vw, 1rem);\n          border: none;\n          background: linear-gradient(145deg, #f5f7fa, #e4e9f2);\n          cursor: pointer;\n          border-radius: 30px;\n          box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n          transition: all 0.3s ease;\n          font-weight: 500;\n        }\n        \n        .button-group button:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n        }\n        \n        .button-group button.active {\n          background: linear-gradient(145deg, #3498db, #2980b9);\n          color: white;\n          font-weight: bold;\n          box-shadow: 0 4px 8px rgba(52, 152, 219, 0.3);\n        }\n        \n        .color-button.player1 {\n          color: white;\n          background: linear-gradient(145deg, #ff5e54, #e74c3c) !important;\n          box-shadow: 0 2px 5px rgba(231, 76, 60, 0.3) !important;\n        }\n        \n        .color-button.player2 {\n          background: linear-gradient(145deg, #ffeb3b, #f9ca24) !important;\n          box-shadow: 0 2px 5px rgba(249, 202, 36, 0.3) !important;\n        }\n        \n        .instructions {\n          margin-top: 25px;\n          text-align: center;\n          max-width: 500px;\n          background-color: rgba(255, 255, 255, 0.7);\n          padding: 15px 20px;\n          border-radius: 12px;\n          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .instructions h3 {\n          margin-bottom: 10px;\n          color: #2c3e50;\n        }\n        \n        .instructions p {\n          line-height: 1.6;\n        }\n        \n        /* Persona cards styling */\n        .persona-container {\n          display: flex;\n          gap: 15px;\n          flex-wrap: wrap;\n          justify-content: center;\n        }\n        \n        .persona-card {\n          flex: 1;\n          min-width: 120px;\n          max-width: 180px;\n          background: linear-gradient(145deg, #f5f7fa, #e4e9f2);\n          border-radius: 12px;\n          padding: 15px;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          position: relative;\n          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .persona-card:hover {\n          transform: translateY(-5px);\n          box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n        }\n        \n        .persona-card.active {\n          background: linear-gradient(145deg, #e1f5fe, #b3e5fc);\n          box-shadow: 0 8px 20px rgba(3, 169, 244, 0.2);\n          border: 2px solid #03a9f4;\n        }\n        \n        .persona-avatar {\n          font-size: 2.5rem;\n          margin-bottom: 10px;\n        }\n        \n        .persona-name {\n          font-weight: bold;\n          font-size: 1.1rem;\n          margin-bottom: 5px;\n          text-align: center;\n        }\n        \n        .persona-difficulty {\n          font-size: 0.9rem;\n          color: #7f8c8d;\n          margin-bottom: 5px;\n          text-align: center;\n        }\n        \n        .persona-info-icon {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n          font-size: 1rem;\n          cursor: pointer;\n          transition: transform 0.2s ease;\n        }\n        \n        .persona-info-icon:hover {\n          transform: scale(1.2);\n        }\n        \n        .persona-info-modal {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background-color: rgba(0, 0, 0, 0.5);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          z-index: 1000;\n        }\n        \n        .persona-info-content {\n          background-color: white;\n          border-radius: 12px;\n          padding: 20px;\n          max-width: 90%;\n          width: 350px;\n          box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n        }\n        \n        .persona-info-header {\n          display: flex;\n          align-items: center;\n          margin-bottom: 15px;\n          position: relative;\n        }\n        \n        .persona-info-avatar {\n          font-size: 2rem;\n          margin-right: 15px;\n        }\n        \n        .persona-info-header h3 {\n          margin: 0;\n        }\n        \n        .close-button {\n          position: absolute;\n          right: 0;\n          top: 0;\n          background: none;\n          border: none;\n          font-size: 1.5rem;\n          cursor: pointer;\n          color: #7f8c8d;\n        }\n        \n        .close-button:hover {\n          color: #2c3e50;\n        }\n        \n        /* Mobile-specific styles */\n        @media (max-width: 600px) {\n          .connect4-game {\n            padding: 15px 10px;\n          }\n          \n          .game-settings {\n            padding: 15px;\n          }\n          \n          .button-group {\n            flex-direction: column;\n          }\n          \n          .button-group button {\n            width: 100%;\n          }\n          \n          .persona-container {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 8px;\n            width: 100%;\n          }\n          \n          .persona-card {\n            min-width: 0;\n            width: 100%;\n            max-width: none;\n            padding: 10px 5px;\n            margin: 0;\n          }\n          \n          .persona-avatar {\n            font-size: 1.8rem;\n            margin-bottom: 5px;\n          }\n          \n          .persona-name {\n            font-size: 0.9rem;\n            margin-bottom: 3px;\n          }\n          \n          .persona-difficulty {\n            font-size: 0.75rem;\n            margin-bottom: 3px;\n          }\n          \n          .persona-info-icon {\n            top: 5px;\n            right: 5px;\n            font-size: 0.8rem;\n          }\n          \n          .board {\n            transform: scale(0.9);\n            margin: -10px auto;\n          }\n          \n          .cell {\n            width: clamp(30px, 8vw, 45px);\n            height: clamp(30px, 8vw, 45px);\n            margin: clamp(3px, 0.8vw, 5px);\n          }\n          \n          /* Improve modal for mobile */\n          .persona-info-content {\n            padding: 15px;\n            max-width: 85%;\n            width: 300px;\n          }\n          \n          .persona-info-avatar {\n            font-size: 1.5rem;\n            margin-right: 10px;\n          }\n          \n          .persona-info-header h3 {\n            font-size: 1.2rem;\n          }\n        }\n        \n        /* Extra small screens */\n        @media (max-width: 350px) {\n          .persona-container {\n            grid-template-columns: repeat(3, 1fr);\n            gap: 5px;\n          }\n          \n          .persona-card {\n            padding: 8px 3px;\n          }\n          \n          .persona-avatar {\n            font-size: 1.5rem;\n            margin-bottom: 3px;\n          }\n          \n          .persona-name {\n            font-size: 0.8rem;\n            margin-bottom: 2px;\n          }\n          \n          .persona-difficulty {\n            font-size: 0.7rem;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n};\n_s(Connect4Game, \"4sTMHt8l+l8BibskIYJBzE+KV1I=\");\n_c = Connect4Game;\nexport default Connect4Game;\nvar _c;\n$RefreshReg$(_c, \"Connect4Game\");","map":{"version":3,"names":["React","useState","useEffect","ROWS","COLS","EMPTY","PLAYER_1","PLAYER_2","createEmptyBoard","findLowestEmptyRow","makeMove","isValidMove","getGameStatus","getAIMove","AI_LEVEL","AI_PERSONA","jsxDEV","_jsxDEV","Fragment","_Fragment","Connect4Game","_s","board","setBoard","currentPlayer","setCurrentPlayer","gameStatus","setGameStatus","winner","setWinner","winningCells","setWinningCells","hoverColumn","setHoverColumn","gameMode","setGameMode","aiDifficulty","setAiDifficulty","ROSIE","aiThinking","setAiThinking","playerColor","setPlayerColor","dropAnimation","setDropAnimation","active","col","row","showPersonaInfo","setShowPersonaInfo","isAiTurn","aiTimer","setTimeout","makeAIMove","clearTimeout","aiPlayer","colIndex","handleMove","rowIndex","player","newBoard","status","handleColumnClick","resetGame","changeGameMode","mode","changeAiDifficulty","difficulty","changePlayerColor","color","renderCell","value","cellClass","isWinningCell","some","cell","className","fileName","_jsxFileName","lineNumber","columnNumber","renderColumn","isColumnFull","isHovered","isPlayerTurn","isInteractive","onClick","onMouseEnter","onMouseLeave","children","map","renderGameStatus","currentPersona","winnerText","name","avatar","turnText","renderGameSettings","JIM","e","stopPropagation","DANGERMOUSE","description","Array","fill","_","jsx","_c","$RefreshReg$"],"sources":["/Users/ianjbrowne/Library/Mobile Documents/com~apple~CloudDocs/ibrow10/Connect4/src/Connect4Game.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  ROWS, \n  COLS, \n  EMPTY, \n  PLAYER_1, \n  PLAYER_2, \n  createEmptyBoard, \n  findLowestEmptyRow,\n  makeMove,\n  isValidMove,\n  getGameStatus\n} from './gameLogic';\nimport { getAIMove, AI_LEVEL, AI_PERSONA } from './aiPlayer';\n\n// Main Connect4 component\nconst Connect4Game = () => {\n  // Game state\n  const [board, setBoard] = useState(createEmptyBoard());\n  const [currentPlayer, setCurrentPlayer] = useState(PLAYER_1);\n  const [gameStatus, setGameStatus] = useState('inProgress'); // 'inProgress', 'win', 'draw'\n  const [winner, setWinner] = useState(null);\n  const [winningCells, setWinningCells] = useState([]);\n  const [hoverColumn, setHoverColumn] = useState(null);\n  const [gameMode, setGameMode] = useState('player-vs-player'); // 'player-vs-player', 'player-vs-ai'\n  const [aiDifficulty, setAiDifficulty] = useState(AI_LEVEL.ROSIE); // Default to Rosie (medium)\n  const [aiThinking, setAiThinking] = useState(false);\n  const [playerColor, setPlayerColor] = useState(PLAYER_1); // Human player color\n  const [dropAnimation, setDropAnimation] = useState({ active: false, col: null, row: null });\n  const [showPersonaInfo, setShowPersonaInfo] = useState(false);\n  \n  // Use effect for AI turn\n  useEffect(() => {\n    // If it's AI's turn in player-vs-ai mode and game is in progress\n    const isAiTurn = gameMode === 'player-vs-ai' && \n                     currentPlayer !== playerColor && \n                     gameStatus === 'inProgress';\n    \n    if (isAiTurn && !dropAnimation.active) {\n      // Add a small delay to make it seem like AI is thinking\n      setAiThinking(true);\n      const aiTimer = setTimeout(() => {\n        makeAIMove();\n        setAiThinking(false);\n      }, 800);\n      \n      return () => clearTimeout(aiTimer);\n    }\n  }, [currentPlayer, gameStatus, gameMode, playerColor, board, dropAnimation]);\n  \n  // AI makes a move\n  const makeAIMove = () => {\n    if (gameStatus !== 'inProgress') return;\n    \n    const aiPlayer = playerColor === PLAYER_1 ? PLAYER_2 : PLAYER_1;\n    const colIndex = getAIMove(board, aiPlayer, aiDifficulty);\n    \n    if (colIndex !== -1) {\n      handleMove(colIndex);\n    }\n  };\n  \n  // Common function to handle moves (both player and AI)\n  const handleMove = (colIndex) => {\n    if (gameStatus !== 'inProgress' || !isValidMove(board, colIndex) || dropAnimation.active) return;\n    \n    const rowIndex = findLowestEmptyRow(board, colIndex);\n    if (rowIndex === -1) return; // Invalid move\n    \n    // Start drop animation\n    setDropAnimation({ active: true, col: colIndex, row: rowIndex, player: currentPlayer });\n    \n    // After animation completes, update the board\n    setTimeout(() => {\n      const { board: newBoard } = makeMove(board, colIndex, currentPlayer);\n      setBoard(newBoard);\n      \n      // Check game status after move\n      const status = getGameStatus(newBoard, rowIndex, colIndex);\n      \n      if (status.status === 'win') {\n        setGameStatus('win');\n        setWinner(status.winner);\n        setWinningCells(status.winningCells);\n      } else if (status.status === 'draw') {\n        setGameStatus('draw');\n      } else {\n        // Switch player\n        setCurrentPlayer(currentPlayer === PLAYER_1 ? PLAYER_2 : PLAYER_1);\n      }\n      \n      // End animation\n      setDropAnimation({ active: false, col: null, row: null });\n    }, 400); // Animation duration\n  };\n  \n  // Handle column click\n  const handleColumnClick = (colIndex) => {\n    // If it's AI's turn in player-vs-ai mode, do nothing\n    if (gameMode === 'player-vs-ai' && currentPlayer !== playerColor) {\n      return;\n    }\n    \n    handleMove(colIndex);\n  };\n  \n  // Reset the game\n  const resetGame = () => {\n    setBoard(createEmptyBoard());\n    setCurrentPlayer(PLAYER_1);\n    setGameStatus('inProgress');\n    setWinner(null);\n    setWinningCells([]);\n    setHoverColumn(null);\n    setAiThinking(false);\n    setDropAnimation({ active: false, col: null, row: null });\n  };\n  \n  // Change game mode\n  const changeGameMode = (mode) => {\n    setGameMode(mode);\n    resetGame();\n  };\n  \n  // Change AI difficulty\n  const changeAiDifficulty = (difficulty) => {\n    setAiDifficulty(difficulty);\n    resetGame();\n  };\n  \n  // Change player color\n  const changePlayerColor = (color) => {\n    setPlayerColor(color);\n    resetGame();\n  };\n  \n  // Render a cell\n  const renderCell = (value, rowIndex, colIndex) => {\n    let cellClass = 'cell';\n    \n    // Handle animation\n    if (dropAnimation.active && dropAnimation.col === colIndex && rowIndex <= dropAnimation.row) {\n      if (rowIndex === dropAnimation.row) {\n        cellClass += dropAnimation.player === PLAYER_1 ? ' player1 dropping' : ' player2 dropping';\n      }\n    } else if (value === PLAYER_1) {\n      cellClass += ' player1';\n    } else if (value === PLAYER_2) {\n      cellClass += ' player2';\n    }\n    \n    // Check if this cell is part of the winning combination\n    const isWinningCell = winningCells.some(cell => \n      cell.row === rowIndex && cell.col === colIndex\n    );\n    \n    if (isWinningCell) {\n      cellClass += ' winning';\n    }\n    \n    return (\n      <div \n        key={`${rowIndex}-${colIndex}`} \n        className={cellClass}\n      />\n    );\n  };\n  \n  // Render a column\n  const renderColumn = (colIndex) => {\n    const isColumnFull = findLowestEmptyRow(board, colIndex) === -1;\n    const isHovered = hoverColumn === colIndex && !isColumnFull && gameStatus === 'inProgress';\n    const isPlayerTurn = gameMode !== 'player-vs-ai' || currentPlayer === playerColor;\n    const isInteractive = gameStatus === 'inProgress' && !dropAnimation.active && isPlayerTurn;\n    \n    return (\n      <div \n        key={colIndex} \n        className={`column ${isHovered ? 'hover' : ''} ${isColumnFull ? 'full' : ''} ${!isInteractive ? 'not-interactive' : ''}`}\n        onClick={() => handleColumnClick(colIndex)}\n        onMouseEnter={() => setHoverColumn(colIndex)}\n        onMouseLeave={() => setHoverColumn(null)}\n      >\n        {board.map((row, rowIndex) => renderCell(row[colIndex], rowIndex, colIndex))}\n      </div>\n    );\n  };\n  \n  // Game status message\n  const renderGameStatus = () => {\n    // Get current AI persona if in AI mode\n    const currentPersona = AI_PERSONA[aiDifficulty];\n    \n    if (gameStatus === 'win') {\n      const winnerText = gameMode === 'player-vs-ai' \n        ? (winner === playerColor ? 'You win!' : `${currentPersona.name} wins!`) \n        : `Player ${winner} wins!`;\n      return <div className=\"status\">{winnerText}</div>;\n    } else if (gameStatus === 'draw') {\n      return <div className=\"status\">Game ended in a draw!</div>;\n    } else if (aiThinking) {\n      return <div className=\"status thinking\">\n        <span className=\"ai-avatar\">{currentPersona.avatar}</span> \n        {currentPersona.name} is thinking...\n      </div>;\n    } else if (dropAnimation.active) {\n      return <div className=\"status\">Making move...</div>;\n    } else {\n      const turnText = gameMode === 'player-vs-ai'\n        ? (currentPlayer === playerColor ? 'Your turn' : `${currentPersona.name}'s turn ${currentPersona.avatar}`)\n        : `Player ${currentPlayer}'s turn`;\n      return <div className=\"status\">{turnText}</div>;\n    }\n  };\n  \n  // Render game settings\n  const renderGameSettings = () => {\n    return (\n      <div className=\"game-settings\">\n        <div className=\"setting-group\">\n          <label>Game Mode:</label>\n          <div className=\"button-group\">\n            <button \n              className={`mode-button ${gameMode === 'player-vs-player' ? 'active' : ''}`}\n              onClick={() => changeGameMode('player-vs-player')}\n            >\n              Player vs Player\n            </button>\n            <button \n              className={`mode-button ${gameMode === 'player-vs-ai' ? 'active' : ''}`}\n              onClick={() => changeGameMode('player-vs-ai')}\n            >\n              Player vs AI\n            </button>\n          </div>\n        </div>\n        \n        {gameMode === 'player-vs-ai' && (\n          <>\n            <div className=\"setting-group\">\n              <label>Choose Your Opponent:</label>\n              <div className=\"persona-container\">\n                <div \n                  className={`persona-card ${aiDifficulty === AI_LEVEL.JIM ? 'active' : ''}`}\n                  onClick={() => changeAiDifficulty(AI_LEVEL.JIM)}\n                >\n                  <div className=\"persona-avatar\">{AI_PERSONA[AI_LEVEL.JIM].avatar}</div>\n                  <div className=\"persona-name\">{AI_PERSONA[AI_LEVEL.JIM].name}</div>\n                  <div className=\"persona-difficulty\">Beginner</div>\n                  <div className=\"persona-info-icon\" onClick={(e) => {\n                    e.stopPropagation();\n                    setShowPersonaInfo(AI_LEVEL.JIM);\n                  }}>ℹ️</div>\n                </div>\n                \n                <div \n                  className={`persona-card ${aiDifficulty === AI_LEVEL.ROSIE ? 'active' : ''}`}\n                  onClick={() => changeAiDifficulty(AI_LEVEL.ROSIE)}\n                >\n                  <div className=\"persona-avatar\">{AI_PERSONA[AI_LEVEL.ROSIE].avatar}</div>\n                  <div className=\"persona-name\">{AI_PERSONA[AI_LEVEL.ROSIE].name}</div>\n                  <div className=\"persona-difficulty\">Intermediate</div>\n                  <div className=\"persona-info-icon\" onClick={(e) => {\n                    e.stopPropagation();\n                    setShowPersonaInfo(AI_LEVEL.ROSIE);\n                  }}>ℹ️</div>\n                </div>\n                \n                <div \n                  className={`persona-card ${aiDifficulty === AI_LEVEL.DANGERMOUSE ? 'active' : ''}`}\n                  onClick={() => changeAiDifficulty(AI_LEVEL.DANGERMOUSE)}\n                >\n                  <div className=\"persona-avatar\">{AI_PERSONA[AI_LEVEL.DANGERMOUSE].avatar}</div>\n                  <div className=\"persona-name\">{AI_PERSONA[AI_LEVEL.DANGERMOUSE].name}</div>\n                  <div className=\"persona-difficulty\">Expert</div>\n                  <div className=\"persona-info-icon\" onClick={(e) => {\n                    e.stopPropagation();\n                    setShowPersonaInfo(AI_LEVEL.DANGERMOUSE);\n                  }}>ℹ️</div>\n                </div>\n              </div>\n              \n              {showPersonaInfo && (\n                <div className=\"persona-info-modal\">\n                  <div className=\"persona-info-content\">\n                    <div className=\"persona-info-header\">\n                      <span className=\"persona-info-avatar\">{AI_PERSONA[showPersonaInfo].avatar}</span>\n                      <h3>{AI_PERSONA[showPersonaInfo].name}</h3>\n                      <button className=\"close-button\" onClick={() => setShowPersonaInfo(false)}>×</button>\n                    </div>\n                    <p>{AI_PERSONA[showPersonaInfo].description}</p>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"setting-group\">\n              <label>Your Color:</label>\n              <div className=\"button-group\">\n                <button \n                  className={`color-button player1 ${playerColor === PLAYER_1 ? 'active' : ''}`}\n                  onClick={() => changePlayerColor(PLAYER_1)}\n                >\n                  Red\n                </button>\n                <button \n                  className={`color-button player2 ${playerColor === PLAYER_2 ? 'active' : ''}`}\n                  onClick={() => changePlayerColor(PLAYER_2)}\n                >\n                  Yellow\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"connect4-game\">\n      <h1>Connect 4</h1>\n      \n      {renderGameSettings()}\n      \n      {renderGameStatus()}\n      \n      <div className=\"board\">\n        {Array(COLS).fill().map((_, colIndex) => renderColumn(colIndex))}\n      </div>\n      \n      <button className=\"reset-button\" onClick={resetGame}>\n        Reset Game\n      </button>\n      \n      <div className=\"instructions\">\n        <h3>How to Play:</h3>\n        <p>Click on a column to drop your disc. The goal is to connect 4 of your discs in a row - horizontally, vertically, or diagonally.</p>\n      </div>\n      \n      <style jsx>{`\n        .connect4-game {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n          margin: 0 auto;\n          max-width: 100%;\n          padding: 20px;\n          background: linear-gradient(135deg, #f5f7fa 0%, #e4e9f2 100%);\n          min-height: 100vh;\n          color: #333;\n        }\n        \n        h1 {\n          color: #2c3e50;\n          margin-bottom: 20px;\n          font-size: clamp(1.8rem, 5vw, 2.5rem);\n          text-shadow: 1px 1px 3px rgba(0,0,0,0.1);\n          text-align: center;\n        }\n        \n        .status {\n          font-size: clamp(1.1rem, 3vw, 1.3rem);\n          margin-bottom: 20px;\n          font-weight: 600;\n          text-align: center;\n          min-height: 40px;\n          padding: 10px;\n          border-radius: 8px;\n          background-color: rgba(255, 255, 255, 0.7);\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 8px;\n        }\n        \n        .status.thinking {\n          color: #3498db;\n          animation: pulse-subtle 2s infinite;\n        }\n        \n        .ai-avatar {\n          font-size: 1.4em;\n          margin-right: 5px;\n        }\n        \n        .board {\n          display: flex;\n          background: linear-gradient(145deg, #3498db, #2980b9);\n          padding: clamp(8px, 2vw, 15px);\n          border-radius: 12px;\n          box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15), inset 0 -5px 0 rgba(0, 0, 0, 0.1);\n          margin: 0 auto;\n          width: fit-content;\n          transition: transform 0.3s ease;\n        }\n        \n        .board:hover {\n          transform: translateY(-5px);\n        }\n        \n        .column {\n          display: flex;\n          flex-direction: column;\n          cursor: pointer;\n          position: relative;\n          transition: all 0.2s ease;\n        }\n        \n        .column.hover {\n          background-color: rgba(255, 255, 255, 0.2);\n          transform: translateY(-5px);\n        }\n        \n        .column.full, .column.not-interactive {\n          cursor: not-allowed;\n          opacity: 0.8;\n        }\n        \n        .cell {\n          width: clamp(35px, 10vw, 60px);\n          height: clamp(35px, 10vw, 60px);\n          margin: clamp(4px, 1vw, 6px);\n          border-radius: 50%;\n          background-color: #ecf0f1;\n          box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.1), 0 2px 4px rgba(0, 0, 0, 0.1);\n          transition: all 0.3s ease;\n          position: relative;\n        }\n        \n        .cell.player1 {\n          background: linear-gradient(145deg, #ff5e54, #e74c3c);\n          box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.2), 0 4px 8px rgba(231, 76, 60, 0.3);\n        }\n        \n        .cell.player2 {\n          background: linear-gradient(145deg, #ffeb3b, #f9ca24);\n          box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(249, 202, 36, 0.3);\n        }\n        \n        .cell.winning {\n          box-shadow: 0 0 15px 5px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2);\n          animation: pulse 1.5s infinite;\n          z-index: 1;\n        }\n        \n        .cell.dropping {\n          animation: dropAnimation 0.5s cubic-bezier(0.215, 0.610, 0.355, 1.000);\n        }\n        \n        @keyframes pulse {\n          0% { box-shadow: 0 0 15px 5px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2); }\n          50% { box-shadow: 0 0 25px 8px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2); }\n          100% { box-shadow: 0 0 15px 5px #2ecc71, inset 0 0 15px rgba(0, 0, 0, 0.2); }\n        }\n        \n        @keyframes pulse-subtle {\n          0% { opacity: 1; }\n          50% { opacity: 0.8; }\n          100% { opacity: 1; }\n        }\n        \n        @keyframes dropAnimation {\n          0% { opacity: 0; transform: translateY(-500%); }\n          60% { opacity: 1; transform: translateY(15%); }\n          80% { transform: translateY(-10%); }\n          100% { transform: translateY(0); }\n        }\n        \n        .reset-button {\n          margin-top: 25px;\n          padding: 12px 25px;\n          font-size: clamp(1rem, 2.5vw, 1.1rem);\n          background: linear-gradient(145deg, #2ecc71, #27ae60);\n          color: white;\n          border: none;\n          border-radius: 30px;\n          cursor: pointer;\n          font-weight: bold;\n          box-shadow: 0 4px 10px rgba(39, 174, 96, 0.3);\n          transition: all 0.3s ease;\n        }\n        \n        .reset-button:hover {\n          background: linear-gradient(145deg, #27ae60, #2ecc71);\n          transform: translateY(-2px);\n          box-shadow: 0 6px 12px rgba(39, 174, 96, 0.4);\n        }\n        \n        .game-settings {\n          display: flex;\n          flex-direction: column;\n          gap: 15px;\n          margin-bottom: 25px;\n          width: 100%;\n          max-width: 500px;\n          background-color: rgba(255, 255, 255, 0.7);\n          padding: 20px;\n          border-radius: 12px;\n          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .setting-group {\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n        }\n        \n        .setting-group label {\n          font-weight: 600;\n          font-size: clamp(1rem, 2.5vw, 1.1rem);\n          color: #2c3e50;\n        }\n        \n        .button-group {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 10px;\n        }\n        \n        .button-group button {\n          flex: 1;\n          min-width: 100px;\n          padding: 10px;\n          font-size: clamp(0.9rem, 2vw, 1rem);\n          border: none;\n          background: linear-gradient(145deg, #f5f7fa, #e4e9f2);\n          cursor: pointer;\n          border-radius: 30px;\n          box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n          transition: all 0.3s ease;\n          font-weight: 500;\n        }\n        \n        .button-group button:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n        }\n        \n        .button-group button.active {\n          background: linear-gradient(145deg, #3498db, #2980b9);\n          color: white;\n          font-weight: bold;\n          box-shadow: 0 4px 8px rgba(52, 152, 219, 0.3);\n        }\n        \n        .color-button.player1 {\n          color: white;\n          background: linear-gradient(145deg, #ff5e54, #e74c3c) !important;\n          box-shadow: 0 2px 5px rgba(231, 76, 60, 0.3) !important;\n        }\n        \n        .color-button.player2 {\n          background: linear-gradient(145deg, #ffeb3b, #f9ca24) !important;\n          box-shadow: 0 2px 5px rgba(249, 202, 36, 0.3) !important;\n        }\n        \n        .instructions {\n          margin-top: 25px;\n          text-align: center;\n          max-width: 500px;\n          background-color: rgba(255, 255, 255, 0.7);\n          padding: 15px 20px;\n          border-radius: 12px;\n          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .instructions h3 {\n          margin-bottom: 10px;\n          color: #2c3e50;\n        }\n        \n        .instructions p {\n          line-height: 1.6;\n        }\n        \n        /* Persona cards styling */\n        .persona-container {\n          display: flex;\n          gap: 15px;\n          flex-wrap: wrap;\n          justify-content: center;\n        }\n        \n        .persona-card {\n          flex: 1;\n          min-width: 120px;\n          max-width: 180px;\n          background: linear-gradient(145deg, #f5f7fa, #e4e9f2);\n          border-radius: 12px;\n          padding: 15px;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          position: relative;\n          box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n        }\n        \n        .persona-card:hover {\n          transform: translateY(-5px);\n          box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n        }\n        \n        .persona-card.active {\n          background: linear-gradient(145deg, #e1f5fe, #b3e5fc);\n          box-shadow: 0 8px 20px rgba(3, 169, 244, 0.2);\n          border: 2px solid #03a9f4;\n        }\n        \n        .persona-avatar {\n          font-size: 2.5rem;\n          margin-bottom: 10px;\n        }\n        \n        .persona-name {\n          font-weight: bold;\n          font-size: 1.1rem;\n          margin-bottom: 5px;\n          text-align: center;\n        }\n        \n        .persona-difficulty {\n          font-size: 0.9rem;\n          color: #7f8c8d;\n          margin-bottom: 5px;\n          text-align: center;\n        }\n        \n        .persona-info-icon {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n          font-size: 1rem;\n          cursor: pointer;\n          transition: transform 0.2s ease;\n        }\n        \n        .persona-info-icon:hover {\n          transform: scale(1.2);\n        }\n        \n        .persona-info-modal {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background-color: rgba(0, 0, 0, 0.5);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          z-index: 1000;\n        }\n        \n        .persona-info-content {\n          background-color: white;\n          border-radius: 12px;\n          padding: 20px;\n          max-width: 90%;\n          width: 350px;\n          box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n        }\n        \n        .persona-info-header {\n          display: flex;\n          align-items: center;\n          margin-bottom: 15px;\n          position: relative;\n        }\n        \n        .persona-info-avatar {\n          font-size: 2rem;\n          margin-right: 15px;\n        }\n        \n        .persona-info-header h3 {\n          margin: 0;\n        }\n        \n        .close-button {\n          position: absolute;\n          right: 0;\n          top: 0;\n          background: none;\n          border: none;\n          font-size: 1.5rem;\n          cursor: pointer;\n          color: #7f8c8d;\n        }\n        \n        .close-button:hover {\n          color: #2c3e50;\n        }\n        \n        /* Mobile-specific styles */\n        @media (max-width: 600px) {\n          .connect4-game {\n            padding: 15px 10px;\n          }\n          \n          .game-settings {\n            padding: 15px;\n          }\n          \n          .button-group {\n            flex-direction: column;\n          }\n          \n          .button-group button {\n            width: 100%;\n          }\n          \n          .persona-container {\n            display: grid;\n            grid-template-columns: repeat(3, 1fr);\n            gap: 8px;\n            width: 100%;\n          }\n          \n          .persona-card {\n            min-width: 0;\n            width: 100%;\n            max-width: none;\n            padding: 10px 5px;\n            margin: 0;\n          }\n          \n          .persona-avatar {\n            font-size: 1.8rem;\n            margin-bottom: 5px;\n          }\n          \n          .persona-name {\n            font-size: 0.9rem;\n            margin-bottom: 3px;\n          }\n          \n          .persona-difficulty {\n            font-size: 0.75rem;\n            margin-bottom: 3px;\n          }\n          \n          .persona-info-icon {\n            top: 5px;\n            right: 5px;\n            font-size: 0.8rem;\n          }\n          \n          .board {\n            transform: scale(0.9);\n            margin: -10px auto;\n          }\n          \n          .cell {\n            width: clamp(30px, 8vw, 45px);\n            height: clamp(30px, 8vw, 45px);\n            margin: clamp(3px, 0.8vw, 5px);\n          }\n          \n          /* Improve modal for mobile */\n          .persona-info-content {\n            padding: 15px;\n            max-width: 85%;\n            width: 300px;\n          }\n          \n          .persona-info-avatar {\n            font-size: 1.5rem;\n            margin-right: 10px;\n          }\n          \n          .persona-info-header h3 {\n            font-size: 1.2rem;\n          }\n        }\n        \n        /* Extra small screens */\n        @media (max-width: 350px) {\n          .persona-container {\n            grid-template-columns: repeat(3, 1fr);\n            gap: 5px;\n          }\n          \n          .persona-card {\n            padding: 8px 3px;\n          }\n          \n          .persona-avatar {\n            font-size: 1.5rem;\n            margin-bottom: 3px;\n          }\n          \n          .persona-name {\n            font-size: 0.8rem;\n            margin-bottom: 2px;\n          }\n          \n          .persona-difficulty {\n            font-size: 0.7rem;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Connect4Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}